#!/usr/bin/env ruby
require './market.rb'
require './script/helpers.rb'
require 'erb'

require "/home/ari/servers/auberge.rb" if File.exist? "/home/ari/servers/auberge.rb"

START = "1 jan #{ARGV[0] || 2021}"
FIN   = ARGV[0] ? "31 dec #{ARGV[0]}" : Date.today.strftime("%d %b %Y")
KIND  = ARGV[0] || "2021"

# download and save the latest information
#
# i acknowledge that this assumes that all tickers are updated at the same time
# TODO ensure that dates are unique among their span
#
# NYSE[5] is an arbitrary selection
latest_bar = NYSE[5].bars.last.date

puts "downloading data after #{latest_bar}..."
updates = Market::Stock.install NYSE, :after => latest_bar
spy_ups = Market::Stock.install [SPY], :after => SPY.bars.last.date
updates = (updates.values + spy_ups.values).flatten

puts "\t#{updates.size} bars updated"

if updates.size > 0
  Bar.build_rankings :stocks => NYSE,
                     :start => Date.parse(latest_bar.to_s),
                     :debug => true
end

# now a cache file will be produced for all of our hard work
simulate :year => KIND.to_i, :drop => -0.2, :force => true

